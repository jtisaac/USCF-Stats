<h3 style="text-align: center" id="perftitle">Performance Analysis</h3>
<%= form_tag({}, {:id => "perf", :class => "inputArea"}) do %>
	USCF ID: <%= text_field_tag "uscf_id" %>
	<%= submit_tag "Go" %>
	<div id="options">
	    <label><%= radio_button_tag 'type', 'regular', true %> Regular</label>
	    <label><%= radio_button_tag 'type', 'quick' %> Quick</label>
		<label><%= check_box("extend", "active", {}, "yes", "no")%>Predict future</label>
		<span id="future"><br />Days in future: <%= text_field_tag "days" %></span>
	</div>
<% end %>
<div id="text">Enter a player's ID to see a chart of performances across history, along with a prediction of future performance and rating trends based on the player's history.  Select "predict future" to view the trends extended to the future.</div>

<div id="scatterplot" style="height: 640px; width: 880px; margin-left: 0px; border: 1px solid black; background-color: black; display: none;"></div>

<button onclick="curvy()" id="curvy">Curvy</button>

<script type="text/javascript">
$("#navigation").val("Performance Analysis");
var gridOn = false;
var curvyOn = false;
$("#curvy").hide();
$("#future").hide();

$("#extend_active").change(function(){
	if ($(this).is(":checked"))
		$("#future").show();
	else
		$("#future").hide();
});

$("#perf").submit(function(){
	$(".inputArea").hide();
	$("#perftitle").hide();
	$("#text").show().text("Loading...");
	var uscf_id = $("#uscf_id").val();
	
	$.ajax({
		type : 'GET',
		url : '/perf_history',
		data : {uscf_id: uscf_id, type: $("#type_regular").attr("checked") ? 'regular' : 'quick'},
	    dataType : 'json',
	  	error : function(){
			alert("There's an error!  e-mail acl68@case.edu");
		},
		success : function(data){
			if (!data){
				$("#text").html("Invalid input");
				$(".inputArea").show();
				$("#perftitle").show();
				return;
			}
			numTournaments = data.length;
			if (numTournaments == 0){
				$("#text").html("That player has no tournament history");
				$(".inputArea").show();
				$("#perftitle").show();
				return;
			}
			
			results = [];
			
			j = 0;
			for (i = 0; i < numTournaments; i++){
				$.ajax({
					type : 'GET',
					url : '/perf_results',
					data : {uscf_id: uscf_id, rating: data[i].rating, tournament: data[i].id, section: data[i].section, name: data[i].name, date: data[i].date},
					dataType : 'json',
					error : function(){
						alert("There's an error!  e-mail acl68@case.edu");
					},
					success : function(data2){
						if (data2 != null)
							results = results.concat(data2);
						console.log(data2)
						console.log(data2 != null)
						j++
						$("#text").html("Loading... " + Math.ceil((j / numTournaments) * 100) + "%<br />Tournament: " + j + "/" + numTournaments);
						if (j == numTournaments){
							$("#text").html("Running linear regression algorithms...");
							$.ajax({
								type : 'POST',
								url : '/performance_chart',
								data : {results: results, 
									extend: ($("#extend_active").is(':checked')) ? 
									((!isNaN(parseFloat($("#days").val())) && isFinite($("#days").val()) &&
									parseFloat($("#days").val()) >= 0) ? $("#days").val() : "0") 
																				: "false"},
								dataType: 'script'
							});
						}
					}
				})
			}
		}
	})
	return false;
});
		
		
		
function grid(){
	if (gridOn == false){
		xAxis.tickSize(-600, 0, 6).tickPadding(9);
		yAxis.tickSize(-800, 0, 6).tickPadding(9);
		svg.selectAll(".x.axis").call(xAxis);
		svg.selectAll(".y.axis").call(yAxis);
		$("line").css("stroke", "white");
		$("line").css("stroke-dasharray", "4 2");
		gridOn = true;
	} else {
		$("#grid").text("Grid");
		xAxis.tickSize(0, 0, 6).tickPadding(9);
		yAxis.tickSize(0, 0, 6).tickPadding(9);
		svg.selectAll(".x.axis").call(xAxis);
		svg.selectAll(".y.axis").call(yAxis);
		gridOn = false;
	}
}

function curvy(){
	if (curvyOn == false){
		$("#curvy").text("Linear");
		rateline.interpolate('cardinal');
		perfline.interpolate('cardinal');
		perfpath.attr("d", perfline(jsdata));
		ratepath.attr("d", rateline(jsdata));
		curvyOn = true;
	} else{
		$("#curvy").text("Curvy");
		rateline.interpolate('linear');
		perfline.interpolate('linear');
		perfpath.attr("d", perfline(jsdata));
		ratepath.attr("d", rateline(jsdata));
		curvyOn = false;
	}
}
</script>
